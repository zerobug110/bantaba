{"ast":null,"code":"/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();else if (typeof define == 'function' && define.amd) define(name, definition);else root[name] = definition();\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true;\n  function detect(ua) {\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[1] || '';\n    }\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[2] || '';\n    }\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),\n      likeAndroid = /like android/i.test(ua),\n      android = !likeAndroid && /android/i.test(ua),\n      nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua),\n      nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua),\n      chromeos = /CrOS/.test(ua),\n      silk = /silk/i.test(ua),\n      sailfish = /sailfish/i.test(ua),\n      tizen = /tizen/i.test(ua),\n      webos = /(web|hpw)(o|0)s/i.test(ua),\n      windowsphone = /windows phone/i.test(ua),\n      samsungBrowser = /SamsungBrowser/i.test(ua),\n      windows = !windowsphone && /windows/i.test(ua),\n      mac = !iosdevice && !silk && /macintosh/i.test(ua),\n      linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua),\n      edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i),\n      versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i),\n      tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua),\n      mobile = !tablet && /[^-]mobi/i.test(ua),\n      xbox = /xbox/i.test(ua),\n      result;\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera',\n        opera: t,\n        version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera',\n        opera: t,\n        version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android',\n        samsungBrowser: t,\n        version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/Whale/i.test(ua)) {\n      result = {\n        name: 'NAVER Whale browser',\n        whale: t,\n        version: getFirstMatch(/(?:whale)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/MZBrowser/i.test(ua)) {\n      result = {\n        name: 'MZ Browser',\n        mzbrowser: t,\n        version: getFirstMatch(/(?:MZBrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast',\n        coast: t,\n        version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/focus/i.test(ua)) {\n      result = {\n        name: 'Focus',\n        focus: t,\n        version: getFirstMatch(/(?:focus)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser',\n        yandexbrowser: t,\n        version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/ucbrowser/i.test(ua)) {\n      result = {\n        name: 'UC Browser',\n        ucbrowser: t,\n        version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon',\n        maxthon: t,\n        version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany',\n        epiphany: t,\n        version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin',\n        puffin: t,\n        version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      };\n    } else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir',\n        sleipnir: t,\n        version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon',\n        kMeleon: t,\n        version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (windowsphone) {\n      result = {\n        name: 'Windows Phone',\n        osname: 'Windows Phone',\n        windowsphone: t\n      };\n      if (edgeVersion) {\n        result.msedge = t;\n        result.version = edgeVersion;\n      } else {\n        result.msie = t;\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i);\n      }\n    } else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer',\n        msie: t,\n        version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome',\n        osname: 'Chrome OS',\n        chromeos: t,\n        chromeBook: t,\n        chrome: t,\n        version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/edg([ea]|ios)/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge',\n        msedge: t,\n        version: edgeVersion\n      };\n    } else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi',\n        vivaldi: t,\n        version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (sailfish) {\n      result = {\n        name: 'Sailfish',\n        osname: 'Sailfish OS',\n        sailfish: t,\n        version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey',\n        seamonkey: t,\n        version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox',\n        firefox: t,\n        version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      };\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t;\n        result.osname = 'Firefox OS';\n      }\n    } else if (silk) {\n      result = {\n        name: 'Amazon Silk',\n        silk: t,\n        version: getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS',\n        phantom: t,\n        version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS',\n        slimer: t,\n        version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry',\n        osname: 'BlackBerry OS',\n        blackberry: t,\n        version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (webos) {\n      result = {\n        name: 'WebOS',\n        osname: 'WebOS',\n        webos: t,\n        version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t);\n    } else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada',\n        osname: 'Bada',\n        bada: t,\n        version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (tizen) {\n      result = {\n        name: 'Tizen',\n        osname: 'Tizen',\n        tizen: t,\n        version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla',\n        qupzilla: t,\n        version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      };\n    } else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium',\n        chromium: t,\n        version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome',\n        chrome: t,\n        version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (android) {\n      result = {\n        name: 'Android',\n        version: versionIdentifier\n      };\n    } else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari',\n        safari: t\n      };\n      if (versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (iosdevice) {\n      result = {\n        name: iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      };\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot',\n        googlebot: t,\n        version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      };\n    } else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n      };\n    }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\";\n        result.blink = t;\n      } else {\n        result.name = result.name || \"Webkit\";\n        result.webkit = t;\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\";\n      result.gecko = t;\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i);\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.windowsphone && (android || result.silk)) {\n      result.android = t;\n      result.osname = 'Android';\n    } else if (!result.windowsphone && iosdevice) {\n      result[iosdevice] = t;\n      result.ios = t;\n      result.osname = 'iOS';\n    } else if (mac) {\n      result.mac = t;\n      result.osname = 'macOS';\n    } else if (xbox) {\n      result.xbox = t;\n      result.osname = 'Xbox';\n    } else if (windows) {\n      result.windows = t;\n      result.osname = 'Windows';\n    } else if (linux) {\n      result.linux = t;\n      result.osname = 'Linux';\n    }\n    function getWindowsVersion(s) {\n      switch (s) {\n        case 'NT':\n          return 'NT';\n        case 'XP':\n          return 'XP';\n        case 'NT 5.0':\n          return '2000';\n        case 'NT 5.1':\n          return 'XP';\n        case 'NT 5.2':\n          return '2003';\n        case 'NT 6.0':\n          return 'Vista';\n        case 'NT 6.1':\n          return '7';\n        case 'NT 6.2':\n          return '8';\n        case 'NT 6.3':\n          return '8.1';\n        case 'NT 10.0':\n          return '10';\n        default:\n          return undefined;\n      }\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i));\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n    if (tablet || nexusTablet || iosdevice == 'ipad' || android && (osMajorVersion == 3 || osMajorVersion >= 4 && !mobile) || result.silk) {\n      result.tablet = t;\n    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || nexusMobile || result.blackberry || result.webos || result.bada) {\n      result.mobile = t;\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge || result.msie && result.version >= 10 || result.yandexbrowser && result.version >= 15 || result.vivaldi && result.version >= 1.0 || result.chrome && result.version >= 20 || result.samsungBrowser && result.version >= 4 || result.whale && compareVersions([result.version, '1.0']) === 1 || result.mzbrowser && compareVersions([result.version, '6.0']) === 1 || result.focus && compareVersions([result.version, '1.0']) === 1 || result.firefox && result.version >= 20.0 || result.safari && result.version >= 6 || result.opera && result.version >= 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6 || result.blackberry && result.version >= 10.1 || result.chromium && result.version >= 20) {\n      result.a = t;\n    } else if (result.msie && result.version < 10 || result.chrome && result.version < 20 || result.firefox && result.version < 20.0 || result.safari && result.version < 6 || result.opera && result.version < 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] < 6 || result.chromium && result.version < 20) {\n      result.c = t;\n    } else result.x = t;\n    return result;\n  }\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '');\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem === 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [],\n      i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      } else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      } else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void 0;\n    }\n    if (strictMode === void 0) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          }\n\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  /*\n   * Set our detect public method to the main bowser object\n   * This is needed to implement bowser in server side\n   */\n  bowser.detect = detect;\n  return bowser;\n});","map":{"version":3,"names":["root","name","definition","module","exports","define","amd","t","detect","ua","getFirstMatch","regex","match","length","getSecondMatch","iosdevice","toLowerCase","likeAndroid","test","android","nexusMobile","nexusTablet","chromeos","silk","sailfish","tizen","webos","windowsphone","samsungBrowser","windows","mac","linux","edgeVersion","versionIdentifier","tablet","mobile","xbox","result","opera","version","whale","mzbrowser","coast","focus","yandexbrowser","ucbrowser","maxthon","epiphany","puffin","sleipnir","kMeleon","osname","msedge","msie","chromeBook","chrome","vivaldi","seamonkey","firefox","firefoxos","phantom","slimer","blackberry","touchpad","bada","qupzilla","chromium","safari","googlebot","blink","webkit","gecko","ios","getWindowsVersion","s","undefined","osVersion","replace","osversion","osMajorVersion","split","compareVersions","a","c","x","bowser","navigator","userAgent","browserList","i","browserItem","getVersionPrecision","map","arr","iterator","Array","prototype","call","push","versions","precision","Math","max","chunks","delta","join","chunk","reverse","isUnsupportedBrowser","minVersions","strictMode","_bowser","browser","hasOwnProperty","Error","String","check","_detect"],"sources":["/home/zerobug/www/bantaba/node_modules/bowser/src/bowser.js"],"sourcesContent":["/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(name, definition)\n  else root[name] = definition()\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n      , chromeos = /CrOS/.test(ua)\n      , silk = /silk/i.test(ua)\n      , sailfish = /sailfish/i.test(ua)\n      , tizen = /tizen/i.test(ua)\n      , webos = /(web|hpw)(o|0)s/i.test(ua)\n      , windowsphone = /windows phone/i.test(ua)\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\n      , windows = !windowsphone && /windows/i.test(ua)\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , xbox = /xbox/i.test(ua)\n      , result\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera'\n        , opera: t\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android'\n        , samsungBrowser: t\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/Whale/i.test(ua)) {\n      result = {\n        name: 'NAVER Whale browser'\n        , whale: t\n        , version: getFirstMatch(/(?:whale)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/MZBrowser/i.test(ua)) {\n      result = {\n        name: 'MZ Browser'\n        , mzbrowser: t\n        , version: getFirstMatch(/(?:MZBrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast'\n        , coast: t\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/focus/i.test(ua)) {\n      result = {\n        name: 'Focus'\n        , focus: t\n        , version: getFirstMatch(/(?:focus)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/ucbrowser/i.test(ua)) {\n      result = {\n          name: 'UC Browser'\n        , ucbrowser: t\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon'\n        , maxthon: t\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany'\n        , epiphany: t\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin'\n        , puffin: t\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      }\n    }\n    else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir'\n        , sleipnir: t\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon'\n        , kMeleon: t\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (windowsphone) {\n      result = {\n        name: 'Windows Phone'\n      , osname: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome'\n      , osname: 'Chrome OS'\n      , chromeos: t\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/edg([ea]|ios)/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi'\n        , vivaldi: t\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (sailfish) {\n      result = {\n        name: 'Sailfish'\n      , osname: 'Sailfish OS'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n        result.osname = 'Firefox OS'\n      }\n    }\n    else if (silk) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS'\n        , slimer: t\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , osname: 'BlackBerry OS'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (webos) {\n      result = {\n        name: 'WebOS'\n      , osname: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , osname: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (tizen) {\n      result = {\n        name: 'Tizen'\n      , osname: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla'\n        , qupzilla: t\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      }\n    }\n    else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium'\n        , chromium: t\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n        , chrome: t\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n        , version: versionIdentifier\n      }\n    }\n    else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      }\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if(/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot'\n      , googlebot: t\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\"\n        result.blink = t\n      } else {\n        result.name = result.name || \"Webkit\"\n        result.webkit = t\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.windowsphone && (android || result.silk)) {\n      result.android = t\n      result.osname = 'Android'\n    } else if (!result.windowsphone && iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n      result.osname = 'iOS'\n    } else if (mac) {\n      result.mac = t\n      result.osname = 'macOS'\n    } else if (xbox) {\n      result.xbox = t\n      result.osname = 'Xbox'\n    } else if (windows) {\n      result.windows = t\n      result.osname = 'Windows'\n    } else if (linux) {\n      result.linux = t\n      result.osname = 'Linux'\n    }\n\n    function getWindowsVersion (s) {\n      switch (s) {\n        case 'NT': return 'NT'\n        case 'XP': return 'XP'\n        case 'NT 5.0': return '2000'\n        case 'NT 5.1': return 'XP'\n        case 'NT 5.2': return '2003'\n        case 'NT 6.0': return 'Vista'\n        case 'NT 6.1': return '7'\n        case 'NT 6.2': return '8'\n        case 'NT 6.3': return '8.1'\n        case 'NT 10.0': return '10'\n        default: return undefined\n      }\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n    if (\n         tablet\n      || nexusTablet\n      || iosdevice == 'ipad'\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n      || result.silk\n    ) {\n      result.tablet = t\n    } else if (\n         mobile\n      || iosdevice == 'iphone'\n      || iosdevice == 'ipod'\n      || android\n      || nexusMobile\n      || result.blackberry\n      || result.webos\n      || result.bada\n    ) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n\t\t    (result.vivaldi && result.version >= 1.0) ||\n        (result.chrome && result.version >= 20) ||\n        (result.samsungBrowser && result.version >= 4) ||\n        (result.whale && compareVersions([result.version, '1.0']) === 1) ||\n        (result.mzbrowser && compareVersions([result.version, '6.0']) === 1) ||\n        (result.focus && compareVersions([result.version, '1.0']) === 1) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        || (result.chromium && result.version >= 20)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        || (result.chromium && result.version < 20)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [], i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n      else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      }\n      else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void(0);\n    }\n\n    if (strictMode === void(0)) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          }\n\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  /*\n   * Set our detect public method to the main bowser object\n   * This is needed to implement bowser in server side\n   */\n  bowser.detect = detect;\n  return bowser\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}